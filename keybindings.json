// Place your key bindings in this file to override the defaultsauto[]
[
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+shift+c",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly && !vim.active"
  },
  {
    "key": "ctrl+oem_2",
    "command": "-editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+u",
    "command": "editor.action.transformToUppercase",
    "when": "!vim.active"
  },
  {
    "key": "ctrl+shift+z",
    "command": "cursorUndo",
    "when": "textInputFocus && !vim.active"
  },
  {
    "key": "ctrl+u",
    "command": "-cursorUndo",
    "when": "textInputFocus"
  },
  {
    "key": "ctrl+shift+z",
    "command": "-redo"
  },
  {
    "key": "ctrl+shift+y",
    "command": "cursorRedo",
    "when": "!vim.active"
  },
  {
    "key": "ctrl+l",
    "command": "editor.action.transformToLowercase",
    "when": "!vim.active"
  },
  {
    "key": "ctrl+shift+a",
    "command": "workbench.action.tasks.runTask",
    "args": "pytest"
  },
  {
    "key": "ctrl+z",
    "command": "undo",
    "when": "!vim.active || vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+z",
    "command": "-undo"
  },
  {
    "key": "ctrl+y",
    "command": "redo",
    "when": "!vim.active || vim.mode == 'Insert'"
  },
  {
    "key": "ctrl+y",
    "command": "-redo"
  },
  {
    "key": "ctrl+7",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly && vim.active"
  },
  {
    "key": "ctrl+alt+k",
    "command": "editor.action.insertCursorAbove",
    "when": "editorTextFocus && vim.active"
  },
  {
    "key": "ctrl+alt+j",
    "command": "editor.action.insertCursorBelow",
    "when": "editorTextFocus && vim.active"
  },
  {
    "key": "ctrl+shift+l",
    "command": "git.stageChange", // unfortunately broken...
    "when": "dirtyDiffVisible"
  },
  {
    "key": "ctrl+shift+l",
    "command": "git.stageSelectedRanges", // as a workaround while the above doesn't work. Stage everything within the current selection
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.compareEditor.focusOtherSide"
  },
  {
    "key": "ctrl+shift+h",
    "command": "git.revertChange", // unfortunately broken...
    "when": "dirtyDiffVisible"
  },
  {
    "key": "ctrl+shift+h",
    "command": "git.revertSelectedRanges", // as a workaround while the above doesn't work. Revert everything within the current selection
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "editor.action.dirtydiff.next",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "ctrl+shift+k",
    "command": "editor.action.dirtydiff.previous",
    "when": "editorTextFocus && !textCompareEditorActive"
  },
  {
    "key": "ctrl+l",
    "command": "closeDirtyDiff",
    "when": "dirtyDiffVisible && vim.active"
  },
  {
    "key": "shift+escape",
    "command": "-closeDirtyDiff",
    "when": "dirtyDiffVisible"
  },
  {
    "key": "ctrl+alt+f",
    "command": "editor.toggleFold", // NOTE: works in vim using "za"!
    "when": "editorTextFocus && foldingEnabled && vim.active"
  },
  {
    "key": "ctrl+oem_7",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "alt+l",
    "command": "workbench.action.moveEditorToNextGroup",
    "when": "vim.active && !panelFocus && !sideBarFocus"
  },
  {
    "key": "alt+h",
    "command": "workbench.action.moveEditorToPreviousGroup",
    "when": "!sideBarFocus && !panelFocus && vim.active"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion && vim.active"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion && vim.active"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.selectNextSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && vim.active"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.terminal.selectPrevSuggestion",
    "when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible && vim.active"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible && vim.active"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible && vim.active"
  },
  {
    "key": "alt+f",
    "command": "actions.find",
    "when": "editorFocus || editorIsOpen && vim.active"
  },
  {
    "key": "ctrl+shift+j",
    "command": "workbench.action.terminal.focusNext",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+shift+k",
    "command": "workbench.action.terminal.focusPrevious",
    "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
  },
  {
    "key": "ctrl+m",
    "command": "editor.action.showHover",
    "when": "editorTextFocus && vim.active && vim.mode != 'SearchInProgressMode'"
  },
  {
    "key": "j",
    "command": "editor.action.scrollDownHover",
    "when": "editorHoverFocused && vim.active"
  },
  {
    "key": "k",
    "command": "editor.action.scrollUpHover",
    "when": "editorHoverFocused && vim.active"
  },
  {
    "key": "l",
    "command": "editor.action.scrollRightHover",
    "when": "editorHoverFocused && vim.active"
  },
  {
    "key": "h",
    "command": "editor.action.scrollLeftHover",
    "when": "editorHoverFocused && vim.active"
  },
  {
    "key": "ctrl+u",
    "command": "editor.action.pageUpHover",
    "when": "editorHoverFocused && vim.active"
  },
  {
    "key": "ctrl+d",
    "command": "editor.action.pageDownHover",
    "when": "editorHoverFocused && vim.active"
  },
  {
    "key": "ctrl+shift+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "terminalFocus || sideBarFocus"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+n",
    "command": "workbench.action.quickOpenNavigateNextInTerminalPicker",
    "when": "terminalFocus && vim.active"
  },
  {
    "key": "ctrl+p",
    "command": "workbench.action.quickOpenNavigatePreviousInTerminalPicker",
    "when": "terminalFocus && vim.active"
  },
  {
    "key": "alt+j",
    "command": "workbench.action.terminal.scrollToNextCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && vim.active && !accessibilityModeEnabled"
  },
  {
    "key": "alt+k",
    "command": "workbench.action.terminal.scrollToPreviousCommand",
    "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && vim.active && !accessibilityModeEnabled"
  },
  {
    "key": "alt+u",
    "command": "workbench.action.terminal.scrollUpPage",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && vim.active && !terminalAltBufferActive"
  },
  {
    "key": "alt+d",
    "command": "workbench.action.terminal.scrollDownPage",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && vim.active && !terminalAltBufferActive"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.terminal.scrollUp",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive && vim.active"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.terminal.scrollDown",
    "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive && vim.active"
  },
  {
    "key": "ctrl+m",
    "command": "-editor.action.toggleTabFocusMode"
  },
  {
    "key": "alt+d",
    "command": "extension.partialDiff.diffSelectionWithClipboard",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+e",
    "command": "workbench.action.quickOpen",
    "when": "!vim.active"
  },
  {
    "key": "ctrl+e",
    "command": "-workbench.action.quickOpen" // to allow Ctrl + E for going to end of the line in bash
  },
  {
    "key": "alt+o",
    "command": "cursorUndo",
    "when": "textInputFocus && vim.active"
  },
  {
    "key": "alt+i",
    "command": "cursorRedo",
    "when": "vim.active"
  },
  {
    "key": "ctrl+7",
    "command": "workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported && vim.active"
  },
  {
    "key": "ctrl+f",
    "command": "workbench.action.terminal.focusFind",
    "when": "(terminalFindFocused && terminalHasBeenCreated && !vim.active || terminalFindFocused && terminalProcessSupported && !vim.active || terminalFocus && terminalHasBeenCreated && !vim.active || terminalFocus && terminalProcessSupported) && !vim.active"
  },
  {
    "key": "ctrl+f",
    "command": "-workbench.action.terminal.focusFind",
    "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "l",
    "command": "breadcrumbs.focusNextWithPicker",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
  },
  {
    "key": "h",
    "command": "breadcrumbs.focusPreviousWithPicker",
    "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus",
  },
  {
    "key": "ctrl+oem_comma",
    "command": "-workbench.action.openSettings"
  },
  {
    "key": "ctrl+oem_comma",
    "command": "workbench.action.toggleSidebarVisibility",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl+b",
    "command": "-workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "ctrl+oem_comma",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled && !filesExplorerFocus"
  },
  {
    "key": "ctrl+shift+e",
    "command": "-workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "ctrl+l",
    "command": "notebook.cell.quitEdit",
    "when": "inputFocus && notebookEditorFocused && vim.active && !editorHasSelection && !editorHoverVisible && vim.mode == 'Normal'"
  },
  {
    "key": "u",
    "command": "undo",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "z",
    "command": "-undo",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "ctrl+r",
    "command": "redo",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "ctrl+l",
    "command": "workbench.action.focusActiveEditorGroup",
    "when": "!editorTextFocus"
  },
  {
    "key": "shift+j",
    "command": "notebook.cell.executeCellAndBelow",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "shift+k",
    "command": "notebook.cell.executeCellsAbove",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "shift+r",
    "command": "jupyter.restartkernel",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "g t",
    "command": "workbench.action.nextEditorInGroup",
    "when": "vim.active && !inputFocus"
  },
  {
    "key": "g shift+t",
    "command": "workbench.action.previousEditorInGroup",
    "when": "vim.active && !inputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.focusLeftGroup",
    "when": "vim.active && !textCompareEditorActive"
  },
  {
    "key": "y",
    "command": "notebook.cell.copy",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused && vim.active"
  },
  {
    "key": "c",
    "command": "-notebook.cell.copy",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "c",
    "command": "notebook.cell.copy",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused && !vim.active"
  },
  {
    "key": "p",
    "command": "notebook.cell.paste",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused && vim.active"
  },
  {
    "key": "v",
    "command": "notebook.cell.paste",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused && !vim.active"
  },
  {
    "key": "v",
    "command": "-notebook.cell.paste",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "d d",
    "command": "-notebook.cell.delete",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "d",
    "command": "notebook.cell.cut",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "x",
    "command": "-notebook.cell.cut",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "shift+p",
    "command": "notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus && vim.active"
  },
  {
    "key": "ctrl+shift+v",
    "command": "notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus && !vim.active"
  },
  {
    "key": "ctrl+shift+v",
    "command": "-notebook.cell.pasteAbove",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+h",
    "command": "workbench.action.terminal.focusNextPane",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+oem_3",
    "command": "workbench.action.terminal.split",
    "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
  },
  {
    "key": "ctrl+alt+l",
    "command": "workbench.action.terminal.resizePaneRight",
    "when": "terminalFocus && vim.active"
  },
  // {
  //   "key": "ctrl+alt+h",
  //   "command": "workbench.action.decreaseViewWidth",
  //   "when": "vim.active && !terminalFocus"
  // },
  // {
  //   "key": "ctrl+alt+l",
  //   "command": "workbench.action.increaseViewWidth",
  //   "when": "vim.active && !terminalFocus"
  // },
  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.terminal.resizePaneLeft",
    "when": "terminalFocus && vim.active"
  },
  {
    "key": "ctrl+alt+l",
    "command": "workbench.action.decreaseViewSize",
    "when": "vim.active && sideBarFocus"
  },
  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.increaseViewSize",
    "when": "sideBarFocus && vim.active"
  },
  {
    "key": "ctrl+alt+h",
    "command": "workbench.action.decreaseViewSize",
    "when": "vim.active && editorFocus"
  },
  {
    "key": "ctrl+alt+l",
    "command": "workbench.action.increaseViewSize",
    "when": "editorFocus && vim.active"
  },
  {
    "key": "alt+j",
    "command": "runCommands",
    "when": "editorTextFocus && !editorReadonly && (vim.mode == 'Visual' || vim.mode == 'VisualLine')",
    "args": {
      "commands": [
        "editor.action.moveLinesDownAction",
        {
          "command": "vim.remap",
          "args": {
            "after": [
              "j",
              "o",
              "j",
              "o",
            ]
          },
        },
      ]
    }
  },
  {
    "key": "alt+k",
    "command": "runCommands",
    "when": "editorTextFocus && !editorReadonly && (vim.mode == 'Visual' || vim.mode == 'VisualLine')",
    "args": {
      "commands": [
        "editor.action.moveLinesUpAction",
        {
          "command": "vim.remap",
          "args": {
            "after": [
              "k",
              "o",
              "k",
              "o",
            ]
          },
        },
      ]
    }
  },
  {
    "key": "alt+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !editorReadonly && vim.mode == 'Normal'",
  },
  {
    "key": "alt+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly && vim.mode == 'Normal'",
  },
  {
    "key": "alt+j",
    "command": "notebook.cell.moveDown",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "alt+k",
    "command": "notebook.cell.moveUp",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "z shift+a",
    "command": "notebook.cell.collapseCellInput",
    "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
  },
  {
    "key": "z a",
    "command": "notebook.cell.collapseCellOutput",
    "when": "notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "key": "z shift+a",
    "command": "notebook.cell.expandCellInput",
    "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
  },
  {
    "key": "z a",
    "command": "notebook.cell.expandCellOutput",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "key": "z shift+m",
    "command": "notebook.cell.collapseAllCellInputs",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "z m",
    "command": "notebook.cell.collapseAllCellOutputs",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "z shift+r",
    "command": "notebook.cell.expandAllCellInputs",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "z r",
    "command": "notebook.cell.expandAllCellOutputs",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-notebook.cell.collapseCellInput",
    "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
  },
  {
    "key": "ctrl+k t",
    "command": "-notebook.cell.collapseCellOutput",
    "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
  },
  {
    "key": "ctrl+k ctrl+c",
    "command": "-notebook.cell.expandCellInput",
    "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
  },
  {
    "key": "ctrl+k t",
    "command": "-notebook.cell.expandCellOutput",
    "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
  },
  {
    "key": "z z",
    "command": "notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  {
    "key": "ctrl+l",
    "command": "-notebook.centerActiveCell",
    "when": "notebookEditorFocused"
  },
  {
    "key": "y",
    "command": "notebook.cell.changeToCode",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup' && !vim.active"
  },
  {
    "key": "y",
    "command": "-notebook.cell.changeToCode",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputFocused && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
  },
  {
    "key": "shift+o",
    "command": "notebook.cell.insertCodeCellAbove",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "o",
    "command": "notebook.cell.insertCodeCellBelow",
    "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
  },
  {
    "key": "ctrl+j",
    "command": "notebook.cell.joinBelow",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "alt+win+j",
    "command": "-notebook.cell.joinBelow",
    "when": "notebookEditorFocused"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "notebook.cell.focusInOutput",
    "when": "notebookCellHasOutputs && notebookEditorFocused && !inputFocus && vim.active"
  },
  {
    "key": "z s",
    "command": "notebook.cell.toggleOutputScrolling",
    "when": "notebookCellHasOutputs && notebookCellListFocused && notebookOutputFocused && !inputFocus"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "notebook.cell.insertCodeCellAbove",
    "when": "notebookCellListFocused && !inputFocus && !vim.active"
  },
  {
    "key": "ctrl+shift+enter",
    "command": "-notebook.cell.insertCodeCellAbove",
    "when": "notebookCellListFocused && !inputFocus"
  },
  {
    "key": "ctrl+shift+j",
    "command": "list.expandSelectionDown",
    "when": "listFocus && listSupportsMultiselect && !inputFocus && vim.active"
  },
  {
    "key": "ctrl+shift+k",
    "command": "list.expandSelectionUp",
    "when": "listFocus && listSupportsMultiselect && !inputFocus && vim.active"
  },
  {
    "key": "shift+v",
    "command": "list.selectAll",
    "when": "listFocus && listSupportsMultiselect && !inputFocus && vim.active"
  },
  {
    "key": "v",
    "command": "list.toggleSelection",
    "when": "listFocus && !inputFocus && vim.active"
  },
  {
    "key": "alt+h",
    "command": "git.viewFileHistory",
    "when": "!vim.active"
  },
  {
    "key": "alt+h",
    "command": "-git.viewFileHistory"
  },
  {
    "key": "ctrl+shift+n",
    "command": "workbench.action.newWindow",
    "when": "!filesExplorerFocus"
  },
  {
    "key": "ctrl+shift+n",
    "command": "-workbench.action.newWindow"
  },
  {
    "key": "ctrl+shift+n",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl+n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus"
  },
  {
    "key": "ctrl+shift+c",
    "command": "openInIntegratedTerminal",
    "when": "vim.active && editorFocus"
  },
  {
    "key": "alt+x",
    "command": "rust-analyzer.run",
    "when": "editorFocus && editorLangId == rust"
  }
]